Инструкция по запуску бота на Ubuntu 20.04+:

Перед установкой на сервер:

В файле config.json вставить токен бота полученный у @BotFather
В файле main.py (можно открыть с помощью блокнота) указать актуальное доменное имя
domein_name = 'доменн.ru' на момент передачи файлов указанно arbot.su

Установка файлов на сервер:
Передать на сервер файлы можно с помощью FileZila
Видео по использованию: https://www.youtube.com/watch?v=ND4Ie_R8yr0

ПРИМЕЧАНИЕ: файлы бота должны находиться в рабочей папке http-клиента (пример /www/arbot.su/public-html)


Подключиться к серверу по ssh для его настройки можно через командную строку Windows (cmd.exe) или через клиент putty
Ссылка на мануал по Putty - https://losst.ru/kak-polzovatsya-putty

После передачи файлов на сервер:
ПРИМЕЧАНИЕ: Все команды перечисленные ниже вводить в SSH-клиенте!

apt update && apt upgrade
python3 --version (при версии Python ниже 3.7, необходимо обновить Python как минимум до версии 3.7)
pip install aiogram

(botUsername - username вашего бота):

nano /lib/systemd/system/botUsername.service

В открывшемся окне введите (botUsername - username вашего бота):

[Unit]
Description=@botUsername
After=network.target

[Service]
Type=idle
WorkingDirectory=[путь к папке с ботом, пример (/root/botUsername) *вводить без круглых и квадратных скобок]
ExecStart=python3 main.py

[Install]
WantedBy=multi.user.target

Сохранить изменения в файле и выйти из редактора

В SSH-клиенте:

systemctl enable botUsername --now

Запустить бота:
systemctl start botUsername
Узнать статус сервера:
systemctl status botUsername
Остановить бота:
systemctl stop botUsername


ИНСТРУКЦИЯ ПО ДОБАВЛЕНИЮ/УДАЛЕНИЮ МОДЕЛЕЙ ИЗ БОТА
Открыть файл с базой данных main.db (находится по пути \AR_js\database\main.db) с помощью SQLiteStudio
В открывшемся приложении выбрать базу данных main
1. Изменение в меню

	Выбрать таблицу "category"
	Выбрать вкладку данные
	На момент передачи файлов содержимое было следующее:

	====================================================
	1	машины			cars
	2	космические корабли	ships
	3	мемы			memes
	====================================================

	УДАЛЕНИЕ
	Выбрать строку, которую хотите удалить (должна подсветиться синим)
	Нажать Del
	Нажать ctrl+Enter для подтверждения действия/ctrl+Backspace в случае отмены действия
	ДОБАВЛЕНИЕ
	Нажать зеленый плюсик или нажать клавишу Ins на клавиатуре
	Ввести имя отображаемое в меню бота в столбец name
	Ввести внутреннее имя в столбец link (использовать буквы англ. алфавита)
	Нажать ctrl+Enter для подтверждения действия/ctrl+Backspace в случае отмены действия

2. Добавление моделей (gltf) в бота

	Желаемую модель поместить в папку \files\objects
	В таблице objects базы данных main.db открыть вкладку данные 
	На момент передачи файлов содержимое было следующее:

	====================================================
	1	cars	horis	files/objects/car_gorizontal.gltf
	2	ships	horis	files/objects/spaceship.gltf
	====================================================

	ДОБАВЛЕНИЕ
	Нажать зеленый плюсик или нажать клавишу Ins на клавиатуре
	Ввести название категории объекта (такое же как в таблице "category" столбце "link")
	
	====================================================
	ПРИМЕР:
	Добавляем машинку
	В таблице "category" в столбце "link" у нас записано cars, значит и в столбце category таблицы objects мы должны указать cars , в случае добавления машинки
	Аналогично для других категорий
	====================================================
	
	В столбце "possition" указать ротацию модели horis в случае если горизонтальная (к столу), vert в случае если модель вертикальная (к монитору)
	В столбец "link" указать ссылку (путь) на модельку (files/objects/[название модели без квадратных скобок].gltf)
	Нажать ctrl+Enter для подтверждения действия/ctrl+Backspace в случае отмены действия

	УДАЛЕНИЕ
	Выбрать строку, которую хотите удалить (должна подсветиться синим)
	Нажать Del
	Нажать ctrl+Enter для подтверждения действия/ctrl+Backspace в случае отмены действия

Остальные таблицы в базе данных редактировать не нужно, бот заполняет их автоматически, когда пользователь указывает желаемый контент, отправляет текст или картинку

	
	
	